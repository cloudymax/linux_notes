apiVersion: v1
kind: Namespace
metadata:
  name: nginx-hello
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hello-web-server
  namespace: nginx-hello
spec:
  selector:
    matchLabels:
      app: nginx-hello
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-hello
    spec:
      containers:
      - name: nginx-hello
        image: nginx
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: index-html
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: index-html
        configMap:
          name: index-html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: nginx-hello
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  0.0.0.0;
          location / {
            root   /usr/share/nginx/html; #Change this line
            index  index.html index.htm;
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: index-html
  namespace: nginx-hello
data:
  index.html: |
    <!DOCTYPE html>
    <html>
      <body>
        <h1>Hello!</h1>
        <img src="https://kagi.com/proxy/5a2e5e2615fed2423332890a73ec9b40.jpg?c=5YigHpODNWx3qev9JrsT1LvyJII66zsiSPWnHX0AftE0KijnuAd8VnU05iazcE0s42Px81MOxSMaDKUuJMBzVcGtmdUt98q_6FKu3u4CUpHv_Zym9OphTsb84AuWVF4v" alt="Dinosaur" />
      </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-service
  namespace: nginx-hello
spec:
  selector:
    app: nginx-hello
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  externalTrafficPolicy: Local
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-hello-ingress
  namespace: nginx-hello
  annotations: {}
    # nginx.ingress.kubernetes.io/use-proxy-protocol: "true"
    # nginx.org/location-snippets: |
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
spec:
  ingressClassName: nginx
  tls: []
  rules:
  - host: hello-nginx.buildstar.online
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-hello-service
            port:
              number: 80
